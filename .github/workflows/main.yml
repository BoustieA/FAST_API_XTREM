name: CI/CD Pipeline for Python

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [app, fast_api_xtrem]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies for ${{ matrix.app }}
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ matrix.app }}/requirements.txt

      - name: Run linting for ${{ matrix.app }}
        run: |
          pip install flake8
          flake8 ${{ matrix.app }}/

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        app: [app, fast_api_xtrem]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies for ${{ matrix.app }}
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ matrix.app }}/requirements.txt

      - name: Install test tools
        run: pip install pytest coverage pytest-cov pytest-mock

      - name: Check if tests exist for ${{ matrix.app }}
        id: check_tests
        run: |
          if [ -d "${{ matrix.app }}/tests" ] && [ "$(find ${{ matrix.app }}/tests -name "test_*.py" | wc -l)" -gt 0 ]; then
            echo "tests_exist=true" >> $GITHUB_OUTPUT
          else
            echo "tests_exist=false" >> $GITHUB_OUTPUT
            echo "No test files found in ${{ matrix.app }}/tests directory. Skipping tests."
          fi

      - name: Run tests with coverage for ${{ matrix.app }}
        if: steps.check_tests.outputs.tests_exist == 'true'
        run: |
          mkdir -p coverage/${{ matrix.app }}
          pytest --cov=${{ matrix.app }} --cov-report=xml:coverage/${{ matrix.app }}/coverage.xml ${{ matrix.app }}/tests/
