name: CI/CD Pipeline for Python

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        run: |
          pip install flake8
          flake8 .  # [[2]][[6]][[9]]

  test:
    runs-on: ubuntu-latest
    needs: lint  # Attend la réussite du linting
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install test tools
        run: pip install pytest coverage  # [[7]][[6]]

      - name: Check if tests exist
        id: check_tests
        run: |
          if [ -d "tests" ] && [ "$(find tests -name "test_*.py" | wc -l)" -gt 0 ]; then
            echo "tests_exist=true" >> $GITHUB_OUTPUT
          else
            echo "tests_exist=false" >> $GITHUB_OUTPUT
            echo "No test files found in tests directory. Skipping tests."
          fi

      - name: Run tests with coverage
        if: steps.check_tests.outputs.tests_exist == 'true'
        run: |
          mkdir -p coverage  # Ensure the coverage directory exists
          pytest --cov=fast_api_xtrem --cov-report=xml:coverage/coverage.xml tests/
          # Remplacez 'your_package' par le nom de votre package
          # et 'tests/' par le dossier contenant vos tests [[7]]


  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [lint, test]  # Dépend des deux jobs précédents
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Placeholder deployment step
  #       run: echo "Deployment would happen here in a real scenario"
  #     # Vos étapes de déploiement ici